---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: buckets.objectstorage.linode.upbound.io
spec:
  group: objectstorage.linode.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - linode
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Bucket is the Schema for the Buckets API. Manages a Linode Object
          Storage Bucket.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BucketSpec defines the desired state of Bucket
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessKey:
                    description: |-
                      The access key to authenticate with. If not specified with the resource, its value can be
                      The S3 access key to use for this resource. (Required for lifecycle_rule and versioning). If not specified with the resource, the value will be read from provider-level obj_access_key, or, generated implicitly at apply-time if obj_use_temp_keys in provider configuration is set.
                    type: string
                  accessKeyRef:
                    description: Reference to a Key to populate accessKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accessKeySelector:
                    description: Selector for a Key to populate accessKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  acl:
                    description: |-
                      The Access Control Level of the bucket using a canned ACL string. See all ACL strings in the Linode API v4 documentation.
                      The Access Control Level of the bucket using a canned ACL string.
                    type: string
                  cert:
                    description: The cert used by this Object Storage Bucket.
                    items:
                      properties:
                        certificate:
                          description: |-
                            The Base64 encoded and PEM formatted SSL certificate.
                            The Base64 encoded and PEM formatted SSL certificate.
                          type: string
                        privateKey:
                          description: |-
                            The private key associated with the TLS/SSL certificate.
                            The private key associated with the TLS/SSL certificate.
                          type: string
                      type: object
                    type: array
                  cluster:
                    description: |-
                      (Deprecated) The cluster of the Linode Object Storage Bucket. This is deprecated in favor of region attribute.
                      For example, us-mia-1 cluster can be translated into us-mia region. Exactly one of region and cluster is required for creating a bucket.
                      The cluster of the Linode Object Storage Bucket.
                    type: string
                  corsEnabled:
                    description: |-
                      If true, the bucket will have CORS enabled for all origins.
                      If true, the bucket will be created with CORS enabled for all origins.
                    type: boolean
                  endpointType:
                    description: |-
                      The type of s3_endpoint available to the user in this region. See Endpoint types for more information.
                      The type of the S3 endpoint available in this region.
                    type: string
                  label:
                    description: |-
                      The label of the Linode Object Storage Bucket.
                      The label of the Linode Object Storage Bucket.
                    type: string
                  lifecycleRule:
                    description: Lifecycle rules to be applied to the bucket.
                    items:
                      properties:
                        abortIncompleteMultipartUploadDays:
                          description: |-
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                          type: number
                        enabled:
                          description: |-
                            Specifies whether the lifecycle rule is active.
                            Specifies whether the lifecycle rule is active.
                          type: boolean
                        expiration:
                          description: Specifies a period in the object's expire.
                          items:
                            properties:
                              date:
                                description: |-
                                  Specifies the date after which you want the corresponding action to take effect.
                                  Specifies the date after which you want the corresponding action to take effect.
                                type: string
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                type: number
                              expiredObjectDeleteMarker:
                                description: |-
                                  On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
                                  Directs Linode Object Storage to remove expired deleted markers.
                                type: boolean
                            type: object
                          type: array
                        id:
                          description: |-
                            The unique identifier for the rule.
                            The unique identifier for the rule.
                          type: string
                        noncurrentVersionExpiration:
                          description: Specifies when non-current object versions
                            expire.
                          items:
                            properties:
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days non-current object versions expire.
                                type: number
                            type: object
                          type: array
                        prefix:
                          description: |-
                            The object key prefix identifying one or more objects to which the rule applies.
                            The object key prefix identifying one or more objects to which the rule applies.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      The region of the Linode Object Storage Bucket. Exactly one of region and cluster is required for creating a bucket.
                      The region of the Linode Object Storage Bucket.
                    type: string
                  s3Endpoint:
                    description: |-
                      The user's s3 endpoint URL, based on the endpoint_type and region.
                      The endpoint for the bucket used for s3 connections.
                    type: string
                  secretKeySecretRef:
                    description: |-
                      The secret key to authenticate with. If not specified with the resource, its value can be
                      The S3 secret key to use for this resource. (Required for lifecycle_rule and versioning). If not specified with the resource, the value will be read from provider-level obj_secret_key, or, generated implicitly at apply-time if obj_use_temp_keys in provider configuration is set.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  versioning:
                    description: |-
                      Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires access_key and secret_key)
                      Whether to enable versioning.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessKey:
                    description: |-
                      The access key to authenticate with. If not specified with the resource, its value can be
                      The S3 access key to use for this resource. (Required for lifecycle_rule and versioning). If not specified with the resource, the value will be read from provider-level obj_access_key, or, generated implicitly at apply-time if obj_use_temp_keys in provider configuration is set.
                    type: string
                  accessKeyRef:
                    description: Reference to a Key to populate accessKey.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accessKeySelector:
                    description: Selector for a Key to populate accessKey.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  acl:
                    description: |-
                      The Access Control Level of the bucket using a canned ACL string. See all ACL strings in the Linode API v4 documentation.
                      The Access Control Level of the bucket using a canned ACL string.
                    type: string
                  cert:
                    description: The cert used by this Object Storage Bucket.
                    items:
                      properties:
                        certificate:
                          description: |-
                            The Base64 encoded and PEM formatted SSL certificate.
                            The Base64 encoded and PEM formatted SSL certificate.
                          type: string
                        privateKey:
                          description: |-
                            The private key associated with the TLS/SSL certificate.
                            The private key associated with the TLS/SSL certificate.
                          type: string
                      type: object
                    type: array
                  cluster:
                    description: |-
                      (Deprecated) The cluster of the Linode Object Storage Bucket. This is deprecated in favor of region attribute.
                      For example, us-mia-1 cluster can be translated into us-mia region. Exactly one of region and cluster is required for creating a bucket.
                      The cluster of the Linode Object Storage Bucket.
                    type: string
                  corsEnabled:
                    description: |-
                      If true, the bucket will have CORS enabled for all origins.
                      If true, the bucket will be created with CORS enabled for all origins.
                    type: boolean
                  endpointType:
                    description: |-
                      The type of s3_endpoint available to the user in this region. See Endpoint types for more information.
                      The type of the S3 endpoint available in this region.
                    type: string
                  label:
                    description: |-
                      The label of the Linode Object Storage Bucket.
                      The label of the Linode Object Storage Bucket.
                    type: string
                  lifecycleRule:
                    description: Lifecycle rules to be applied to the bucket.
                    items:
                      properties:
                        abortIncompleteMultipartUploadDays:
                          description: |-
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                          type: number
                        enabled:
                          description: |-
                            Specifies whether the lifecycle rule is active.
                            Specifies whether the lifecycle rule is active.
                          type: boolean
                        expiration:
                          description: Specifies a period in the object's expire.
                          items:
                            properties:
                              date:
                                description: |-
                                  Specifies the date after which you want the corresponding action to take effect.
                                  Specifies the date after which you want the corresponding action to take effect.
                                type: string
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                type: number
                              expiredObjectDeleteMarker:
                                description: |-
                                  On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
                                  Directs Linode Object Storage to remove expired deleted markers.
                                type: boolean
                            type: object
                          type: array
                        id:
                          description: |-
                            The unique identifier for the rule.
                            The unique identifier for the rule.
                          type: string
                        noncurrentVersionExpiration:
                          description: Specifies when non-current object versions
                            expire.
                          items:
                            properties:
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days non-current object versions expire.
                                type: number
                            type: object
                          type: array
                        prefix:
                          description: |-
                            The object key prefix identifying one or more objects to which the rule applies.
                            The object key prefix identifying one or more objects to which the rule applies.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      The region of the Linode Object Storage Bucket. Exactly one of region and cluster is required for creating a bucket.
                      The region of the Linode Object Storage Bucket.
                    type: string
                  s3Endpoint:
                    description: |-
                      The user's s3 endpoint URL, based on the endpoint_type and region.
                      The endpoint for the bucket used for s3 connections.
                    type: string
                  secretKeySecretRef:
                    description: |-
                      The secret key to authenticate with. If not specified with the resource, its value can be
                      The S3 secret key to use for this resource. (Required for lifecycle_rule and versioning). If not specified with the resource, the value will be read from provider-level obj_secret_key, or, generated implicitly at apply-time if obj_use_temp_keys in provider configuration is set.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  versioning:
                    description: |-
                      Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires access_key and secret_key)
                      Whether to enable versioning.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.label is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.label)
                || (has(self.initProvider) && has(self.initProvider.label))'
          status:
            description: BucketStatus defines the observed state of Bucket.
            properties:
              atProvider:
                properties:
                  accessKey:
                    description: |-
                      The access key to authenticate with. If not specified with the resource, its value can be
                      The S3 access key to use for this resource. (Required for lifecycle_rule and versioning). If not specified with the resource, the value will be read from provider-level obj_access_key, or, generated implicitly at apply-time if obj_use_temp_keys in provider configuration is set.
                    type: string
                  acl:
                    description: |-
                      The Access Control Level of the bucket using a canned ACL string. See all ACL strings in the Linode API v4 documentation.
                      The Access Control Level of the bucket using a canned ACL string.
                    type: string
                  cert:
                    description: The cert used by this Object Storage Bucket.
                    items:
                      properties:
                        certificate:
                          description: |-
                            The Base64 encoded and PEM formatted SSL certificate.
                            The Base64 encoded and PEM formatted SSL certificate.
                          type: string
                        privateKey:
                          description: |-
                            The private key associated with the TLS/SSL certificate.
                            The private key associated with the TLS/SSL certificate.
                          type: string
                      type: object
                    type: array
                  cluster:
                    description: |-
                      (Deprecated) The cluster of the Linode Object Storage Bucket. This is deprecated in favor of region attribute.
                      For example, us-mia-1 cluster can be translated into us-mia region. Exactly one of region and cluster is required for creating a bucket.
                      The cluster of the Linode Object Storage Bucket.
                    type: string
                  corsEnabled:
                    description: |-
                      If true, the bucket will have CORS enabled for all origins.
                      If true, the bucket will be created with CORS enabled for all origins.
                    type: boolean
                  endpoint:
                    description: The endpoint for the bucket used for s3 connections.
                    type: string
                  endpointType:
                    description: |-
                      The type of s3_endpoint available to the user in this region. See Endpoint types for more information.
                      The type of the S3 endpoint available in this region.
                    type: string
                  hostname:
                    description: The hostname where this bucket can be accessed. This
                      hostname can be accessed through a browser if the bucket is
                      made public.
                    type: string
                  id:
                    description: The unique identifier for the rule.
                    type: string
                  label:
                    description: |-
                      The label of the Linode Object Storage Bucket.
                      The label of the Linode Object Storage Bucket.
                    type: string
                  lifecycleRule:
                    description: Lifecycle rules to be applied to the bucket.
                    items:
                      properties:
                        abortIncompleteMultipartUploadDays:
                          description: |-
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                            Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
                          type: number
                        enabled:
                          description: |-
                            Specifies whether the lifecycle rule is active.
                            Specifies whether the lifecycle rule is active.
                          type: boolean
                        expiration:
                          description: Specifies a period in the object's expire.
                          items:
                            properties:
                              date:
                                description: |-
                                  Specifies the date after which you want the corresponding action to take effect.
                                  Specifies the date after which you want the corresponding action to take effect.
                                type: string
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                type: number
                              expiredObjectDeleteMarker:
                                description: |-
                                  On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Linode Object Storage to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
                                  Directs Linode Object Storage to remove expired deleted markers.
                                type: boolean
                            type: object
                          type: array
                        id:
                          description: |-
                            The unique identifier for the rule.
                            The unique identifier for the rule.
                          type: string
                        noncurrentVersionExpiration:
                          description: Specifies when non-current object versions
                            expire.
                          items:
                            properties:
                              days:
                                description: |-
                                  Specifies the number of days after object creation when the specific rule action takes effect.
                                  Specifies the number of days non-current object versions expire.
                                type: number
                            type: object
                          type: array
                        prefix:
                          description: |-
                            The object key prefix identifying one or more objects to which the rule applies.
                            The object key prefix identifying one or more objects to which the rule applies.
                          type: string
                      type: object
                    type: array
                  region:
                    description: |-
                      The region of the Linode Object Storage Bucket. Exactly one of region and cluster is required for creating a bucket.
                      The region of the Linode Object Storage Bucket.
                    type: string
                  s3Endpoint:
                    description: |-
                      The user's s3 endpoint URL, based on the endpoint_type and region.
                      The endpoint for the bucket used for s3 connections.
                    type: string
                  versioning:
                    description: |-
                      Whether to enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket. (Requires access_key and secret_key)
                      Whether to enable versioning.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
