//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertsInitParameters) DeepCopyInto(out *AlertsInitParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Io != nil {
		in, out := &in.Io, &out.Io
		*out = new(float64)
		**out = **in
	}
	if in.NetworkIn != nil {
		in, out := &in.NetworkIn, &out.NetworkIn
		*out = new(float64)
		**out = **in
	}
	if in.NetworkOut != nil {
		in, out := &in.NetworkOut, &out.NetworkOut
		*out = new(float64)
		**out = **in
	}
	if in.TransferQuota != nil {
		in, out := &in.TransferQuota, &out.TransferQuota
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertsInitParameters.
func (in *AlertsInitParameters) DeepCopy() *AlertsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AlertsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertsObservation) DeepCopyInto(out *AlertsObservation) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Io != nil {
		in, out := &in.Io, &out.Io
		*out = new(float64)
		**out = **in
	}
	if in.NetworkIn != nil {
		in, out := &in.NetworkIn, &out.NetworkIn
		*out = new(float64)
		**out = **in
	}
	if in.NetworkOut != nil {
		in, out := &in.NetworkOut, &out.NetworkOut
		*out = new(float64)
		**out = **in
	}
	if in.TransferQuota != nil {
		in, out := &in.TransferQuota, &out.TransferQuota
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertsObservation.
func (in *AlertsObservation) DeepCopy() *AlertsObservation {
	if in == nil {
		return nil
	}
	out := new(AlertsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertsParameters) DeepCopyInto(out *AlertsParameters) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(float64)
		**out = **in
	}
	if in.Io != nil {
		in, out := &in.Io, &out.Io
		*out = new(float64)
		**out = **in
	}
	if in.NetworkIn != nil {
		in, out := &in.NetworkIn, &out.NetworkIn
		*out = new(float64)
		**out = **in
	}
	if in.NetworkOut != nil {
		in, out := &in.NetworkOut, &out.NetworkOut
		*out = new(float64)
		**out = **in
	}
	if in.TransferQuota != nil {
		in, out := &in.TransferQuota, &out.TransferQuota
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertsParameters.
func (in *AlertsParameters) DeepCopy() *AlertsParameters {
	if in == nil {
		return nil
	}
	out := new(AlertsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupsInitParameters) DeepCopyInto(out *BackupsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupsInitParameters.
func (in *BackupsInitParameters) DeepCopy() *BackupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BackupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupsObservation) DeepCopyInto(out *BackupsObservation) {
	*out = *in
	if in.Available != nil {
		in, out := &in.Available, &out.Available
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = make([]ScheduleObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupsObservation.
func (in *BackupsObservation) DeepCopy() *BackupsObservation {
	if in == nil {
		return nil
	}
	out := new(BackupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupsParameters) DeepCopyInto(out *BackupsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupsParameters.
func (in *BackupsParameters) DeepCopy() *BackupsParameters {
	if in == nil {
		return nil
	}
	out := new(BackupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Config) DeepCopyInto(out *Config) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Config.
func (in *Config) DeepCopy() *Config {
	if in == nil {
		return nil
	}
	out := new(Config)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Config) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDevicesInitParameters) DeepCopyInto(out *ConfigDevicesInitParameters) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]DevicesSdaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]DevicesSdbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]DevicesSdcInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]DevicesSddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]DevicesSdeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]DevicesSdfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]DevicesSdgInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]DevicesSdhInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDevicesInitParameters.
func (in *ConfigDevicesInitParameters) DeepCopy() *ConfigDevicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigDevicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDevicesObservation) DeepCopyInto(out *ConfigDevicesObservation) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]DevicesSdaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]DevicesSdbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]DevicesSdcObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]DevicesSddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]DevicesSdeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]DevicesSdfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]DevicesSdgObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]DevicesSdhObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDevicesObservation.
func (in *ConfigDevicesObservation) DeepCopy() *ConfigDevicesObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigDevicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigDevicesParameters) DeepCopyInto(out *ConfigDevicesParameters) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]DevicesSdaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]DevicesSdbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]DevicesSdcParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]DevicesSddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]DevicesSdeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]DevicesSdfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]DevicesSdgParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]DevicesSdhParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigDevicesParameters.
func (in *ConfigDevicesParameters) DeepCopy() *ConfigDevicesParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigDevicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigHelpersInitParameters) DeepCopyInto(out *ConfigHelpersInitParameters) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigHelpersInitParameters.
func (in *ConfigHelpersInitParameters) DeepCopy() *ConfigHelpersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigHelpersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigHelpersObservation) DeepCopyInto(out *ConfigHelpersObservation) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigHelpersObservation.
func (in *ConfigHelpersObservation) DeepCopy() *ConfigHelpersObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigHelpersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigHelpersParameters) DeepCopyInto(out *ConfigHelpersParameters) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigHelpersParameters.
func (in *ConfigHelpersParameters) DeepCopy() *ConfigHelpersParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigHelpersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters) DeepCopyInto(out *ConfigInitParameters) {
	*out = *in
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]DevicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]HelpersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters.
func (in *ConfigInitParameters) DeepCopy() *ConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInitParameters_2) DeepCopyInto(out *ConfigInitParameters_2) {
	*out = *in
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]DeviceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]ConfigDevicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]ConfigHelpersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]ConfigInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInitParameters_2.
func (in *ConfigInitParameters_2) DeepCopy() *ConfigInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ConfigInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceIPv4InitParameters) DeepCopyInto(out *ConfigInterfaceIPv4InitParameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceIPv4InitParameters.
func (in *ConfigInterfaceIPv4InitParameters) DeepCopy() *ConfigInterfaceIPv4InitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceIPv4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceIPv4Observation) DeepCopyInto(out *ConfigInterfaceIPv4Observation) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceIPv4Observation.
func (in *ConfigInterfaceIPv4Observation) DeepCopy() *ConfigInterfaceIPv4Observation {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceIPv4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceIPv4Parameters) DeepCopyInto(out *ConfigInterfaceIPv4Parameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceIPv4Parameters.
func (in *ConfigInterfaceIPv4Parameters) DeepCopy() *ConfigInterfaceIPv4Parameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceIPv4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceInitParameters) DeepCopyInto(out *ConfigInterfaceInitParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]ConfigInterfaceIPv4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceInitParameters.
func (in *ConfigInterfaceInitParameters) DeepCopy() *ConfigInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceObservation) DeepCopyInto(out *ConfigInterfaceObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]ConfigInterfaceIPv4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceObservation.
func (in *ConfigInterfaceObservation) DeepCopy() *ConfigInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigInterfaceParameters) DeepCopyInto(out *ConfigInterfaceParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]ConfigInterfaceIPv4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigInterfaceParameters.
func (in *ConfigInterfaceParameters) DeepCopy() *ConfigInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigList) DeepCopyInto(out *ConfigList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Config, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigList.
func (in *ConfigList) DeepCopy() *ConfigList {
	if in == nil {
		return nil
	}
	out := new(ConfigList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConfigList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation) DeepCopyInto(out *ConfigObservation) {
	*out = *in
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]DevicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]HelpersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation.
func (in *ConfigObservation) DeepCopy() *ConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigObservation_2) DeepCopyInto(out *ConfigObservation_2) {
	*out = *in
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]DeviceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]ConfigDevicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]ConfigHelpersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]ConfigInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigObservation_2.
func (in *ConfigObservation_2) DeepCopy() *ConfigObservation_2 {
	if in == nil {
		return nil
	}
	out := new(ConfigObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters) DeepCopyInto(out *ConfigParameters) {
	*out = *in
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]DevicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]HelpersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters.
func (in *ConfigParameters) DeepCopy() *ConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigParameters_2) DeepCopyInto(out *ConfigParameters_2) {
	*out = *in
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Comments != nil {
		in, out := &in.Comments, &out.Comments
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = make([]DeviceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]ConfigDevicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helpers != nil {
		in, out := &in.Helpers, &out.Helpers
		*out = make([]ConfigHelpersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]ConfigInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Kernel != nil {
		in, out := &in.Kernel, &out.Kernel
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MemoryLimit != nil {
		in, out := &in.MemoryLimit, &out.MemoryLimit
		*out = new(float64)
		**out = **in
	}
	if in.RootDevice != nil {
		in, out := &in.RootDevice, &out.RootDevice
		*out = new(string)
		**out = **in
	}
	if in.RunLevel != nil {
		in, out := &in.RunLevel, &out.RunLevel
		*out = new(string)
		**out = **in
	}
	if in.VirtMode != nil {
		in, out := &in.VirtMode, &out.VirtMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigParameters_2.
func (in *ConfigParameters_2) DeepCopy() *ConfigParameters_2 {
	if in == nil {
		return nil
	}
	out := new(ConfigParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigSpec) DeepCopyInto(out *ConfigSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigSpec.
func (in *ConfigSpec) DeepCopy() *ConfigSpec {
	if in == nil {
		return nil
	}
	out := new(ConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigStatus) DeepCopyInto(out *ConfigStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigStatus.
func (in *ConfigStatus) DeepCopy() *ConfigStatus {
	if in == nil {
		return nil
	}
	out := new(ConfigStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceInitParameters) DeepCopyInto(out *DeviceInitParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceInitParameters.
func (in *DeviceInitParameters) DeepCopy() *DeviceInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceObservation) DeepCopyInto(out *DeviceObservation) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceObservation.
func (in *DeviceObservation) DeepCopy() *DeviceObservation {
	if in == nil {
		return nil
	}
	out := new(DeviceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeviceParameters) DeepCopyInto(out *DeviceParameters) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeviceParameters.
func (in *DeviceParameters) DeepCopy() *DeviceParameters {
	if in == nil {
		return nil
	}
	out := new(DeviceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesInitParameters) DeepCopyInto(out *DevicesInitParameters) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]SdaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]SdbInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]SdcInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]SddInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]SdeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]SdfInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]SdgInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]SdhInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesInitParameters.
func (in *DevicesInitParameters) DeepCopy() *DevicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesObservation) DeepCopyInto(out *DevicesObservation) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]SdaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]SdbObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]SdcObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]SddObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]SdeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]SdfObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]SdgObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]SdhObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesObservation.
func (in *DevicesObservation) DeepCopy() *DevicesObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesParameters) DeepCopyInto(out *DevicesParameters) {
	*out = *in
	if in.Sda != nil {
		in, out := &in.Sda, &out.Sda
		*out = make([]SdaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdb != nil {
		in, out := &in.Sdb, &out.Sdb
		*out = make([]SdbParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdc != nil {
		in, out := &in.Sdc, &out.Sdc
		*out = make([]SdcParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdd != nil {
		in, out := &in.Sdd, &out.Sdd
		*out = make([]SddParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sde != nil {
		in, out := &in.Sde, &out.Sde
		*out = make([]SdeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdf != nil {
		in, out := &in.Sdf, &out.Sdf
		*out = make([]SdfParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdg != nil {
		in, out := &in.Sdg, &out.Sdg
		*out = make([]SdgParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sdh != nil {
		in, out := &in.Sdh, &out.Sdh
		*out = make([]SdhParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesParameters.
func (in *DevicesParameters) DeepCopy() *DevicesParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdaInitParameters) DeepCopyInto(out *DevicesSdaInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdaInitParameters.
func (in *DevicesSdaInitParameters) DeepCopy() *DevicesSdaInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdaObservation) DeepCopyInto(out *DevicesSdaObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdaObservation.
func (in *DevicesSdaObservation) DeepCopy() *DevicesSdaObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdaParameters) DeepCopyInto(out *DevicesSdaParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdaParameters.
func (in *DevicesSdaParameters) DeepCopy() *DevicesSdaParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdbInitParameters) DeepCopyInto(out *DevicesSdbInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdbInitParameters.
func (in *DevicesSdbInitParameters) DeepCopy() *DevicesSdbInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdbObservation) DeepCopyInto(out *DevicesSdbObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdbObservation.
func (in *DevicesSdbObservation) DeepCopy() *DevicesSdbObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdbParameters) DeepCopyInto(out *DevicesSdbParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdbParameters.
func (in *DevicesSdbParameters) DeepCopy() *DevicesSdbParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdcInitParameters) DeepCopyInto(out *DevicesSdcInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdcInitParameters.
func (in *DevicesSdcInitParameters) DeepCopy() *DevicesSdcInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdcObservation) DeepCopyInto(out *DevicesSdcObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdcObservation.
func (in *DevicesSdcObservation) DeepCopy() *DevicesSdcObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdcParameters) DeepCopyInto(out *DevicesSdcParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdcParameters.
func (in *DevicesSdcParameters) DeepCopy() *DevicesSdcParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSddInitParameters) DeepCopyInto(out *DevicesSddInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSddInitParameters.
func (in *DevicesSddInitParameters) DeepCopy() *DevicesSddInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSddObservation) DeepCopyInto(out *DevicesSddObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSddObservation.
func (in *DevicesSddObservation) DeepCopy() *DevicesSddObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSddParameters) DeepCopyInto(out *DevicesSddParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSddParameters.
func (in *DevicesSddParameters) DeepCopy() *DevicesSddParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdeInitParameters) DeepCopyInto(out *DevicesSdeInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdeInitParameters.
func (in *DevicesSdeInitParameters) DeepCopy() *DevicesSdeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdeObservation) DeepCopyInto(out *DevicesSdeObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdeObservation.
func (in *DevicesSdeObservation) DeepCopy() *DevicesSdeObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdeParameters) DeepCopyInto(out *DevicesSdeParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdeParameters.
func (in *DevicesSdeParameters) DeepCopy() *DevicesSdeParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdfInitParameters) DeepCopyInto(out *DevicesSdfInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdfInitParameters.
func (in *DevicesSdfInitParameters) DeepCopy() *DevicesSdfInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdfObservation) DeepCopyInto(out *DevicesSdfObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdfObservation.
func (in *DevicesSdfObservation) DeepCopy() *DevicesSdfObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdfParameters) DeepCopyInto(out *DevicesSdfParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdfParameters.
func (in *DevicesSdfParameters) DeepCopy() *DevicesSdfParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdgInitParameters) DeepCopyInto(out *DevicesSdgInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdgInitParameters.
func (in *DevicesSdgInitParameters) DeepCopy() *DevicesSdgInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdgInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdgObservation) DeepCopyInto(out *DevicesSdgObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdgObservation.
func (in *DevicesSdgObservation) DeepCopy() *DevicesSdgObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdgParameters) DeepCopyInto(out *DevicesSdgParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdgParameters.
func (in *DevicesSdgParameters) DeepCopy() *DevicesSdgParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdhInitParameters) DeepCopyInto(out *DevicesSdhInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdhInitParameters.
func (in *DevicesSdhInitParameters) DeepCopy() *DevicesSdhInitParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdhInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdhObservation) DeepCopyInto(out *DevicesSdhObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdhObservation.
func (in *DevicesSdhObservation) DeepCopy() *DevicesSdhObservation {
	if in == nil {
		return nil
	}
	out := new(DevicesSdhObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DevicesSdhParameters) DeepCopyInto(out *DevicesSdhParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskIDRef != nil {
		in, out := &in.DiskIDRef, &out.DiskIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskIDSelector != nil {
		in, out := &in.DiskIDSelector, &out.DiskIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DevicesSdhParameters.
func (in *DevicesSdhParameters) DeepCopy() *DevicesSdhParameters {
	if in == nil {
		return nil
	}
	out := new(DevicesSdhParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Disk) DeepCopyInto(out *Disk) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Disk.
func (in *Disk) DeepCopy() *Disk {
	if in == nil {
		return nil
	}
	out := new(Disk)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Disk) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters) DeepCopyInto(out *DiskInitParameters) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptData != nil {
		in, out := &in.StackscriptData, &out.StackscriptData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters.
func (in *DiskInitParameters) DeepCopy() *DiskInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskInitParameters_2) DeepCopyInto(out *DiskInitParameters_2) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptData != nil {
		in, out := &in.StackscriptData, &out.StackscriptData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptIDRef != nil {
		in, out := &in.StackscriptIDRef, &out.StackscriptIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackscriptIDSelector != nil {
		in, out := &in.StackscriptIDSelector, &out.StackscriptIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskInitParameters_2.
func (in *DiskInitParameters_2) DeepCopy() *DiskInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(DiskInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskList) DeepCopyInto(out *DiskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Disk, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskList.
func (in *DiskList) DeepCopy() *DiskList {
	if in == nil {
		return nil
	}
	out := new(DiskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation) DeepCopyInto(out *DiskObservation) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation.
func (in *DiskObservation) DeepCopy() *DiskObservation {
	if in == nil {
		return nil
	}
	out := new(DiskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskObservation_2) DeepCopyInto(out *DiskObservation_2) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(string)
		**out = **in
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Updated != nil {
		in, out := &in.Updated, &out.Updated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskObservation_2.
func (in *DiskObservation_2) DeepCopy() *DiskObservation_2 {
	if in == nil {
		return nil
	}
	out := new(DiskObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters) DeepCopyInto(out *DiskParameters) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.ReadOnly != nil {
		in, out := &in.ReadOnly, &out.ReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptDataSecretRef != nil {
		in, out := &in.StackscriptDataSecretRef, &out.StackscriptDataSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters.
func (in *DiskParameters) DeepCopy() *DiskParameters {
	if in == nil {
		return nil
	}
	out := new(DiskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskParameters_2) DeepCopyInto(out *DiskParameters_2) {
	*out = *in
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Filesystem != nil {
		in, out := &in.Filesystem, &out.Filesystem
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptDataSecretRef != nil {
		in, out := &in.StackscriptDataSecretRef, &out.StackscriptDataSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptIDRef != nil {
		in, out := &in.StackscriptIDRef, &out.StackscriptIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackscriptIDSelector != nil {
		in, out := &in.StackscriptIDSelector, &out.StackscriptIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskParameters_2.
func (in *DiskParameters_2) DeepCopy() *DiskParameters_2 {
	if in == nil {
		return nil
	}
	out := new(DiskParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskSpec) DeepCopyInto(out *DiskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskSpec.
func (in *DiskSpec) DeepCopy() *DiskSpec {
	if in == nil {
		return nil
	}
	out := new(DiskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskStatus) DeepCopyInto(out *DiskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskStatus.
func (in *DiskStatus) DeepCopy() *DiskStatus {
	if in == nil {
		return nil
	}
	out := new(DiskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelpersInitParameters) DeepCopyInto(out *HelpersInitParameters) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelpersInitParameters.
func (in *HelpersInitParameters) DeepCopy() *HelpersInitParameters {
	if in == nil {
		return nil
	}
	out := new(HelpersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelpersObservation) DeepCopyInto(out *HelpersObservation) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelpersObservation.
func (in *HelpersObservation) DeepCopy() *HelpersObservation {
	if in == nil {
		return nil
	}
	out := new(HelpersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelpersParameters) DeepCopyInto(out *HelpersParameters) {
	*out = *in
	if in.DevtmpfsAutomount != nil {
		in, out := &in.DevtmpfsAutomount, &out.DevtmpfsAutomount
		*out = new(bool)
		**out = **in
	}
	if in.Distro != nil {
		in, out := &in.Distro, &out.Distro
		*out = new(bool)
		**out = **in
	}
	if in.ModulesDep != nil {
		in, out := &in.ModulesDep, &out.ModulesDep
		*out = new(bool)
		**out = **in
	}
	if in.Network != nil {
		in, out := &in.Network, &out.Network
		*out = new(bool)
		**out = **in
	}
	if in.UpdatedbDisabled != nil {
		in, out := &in.UpdatedbDisabled, &out.UpdatedbDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelpersParameters.
func (in *HelpersParameters) DeepCopy() *HelpersParameters {
	if in == nil {
		return nil
	}
	out := new(HelpersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IP) DeepCopyInto(out *IP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IP.
func (in *IP) DeepCopy() *IP {
	if in == nil {
		return nil
	}
	out := new(IP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPInitParameters) DeepCopyInto(out *IPInitParameters) {
	*out = *in
	if in.ApplyImmediately != nil {
		in, out := &in.ApplyImmediately, &out.ApplyImmediately
		*out = new(bool)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.Rdns != nil {
		in, out := &in.Rdns, &out.Rdns
		*out = new(string)
		**out = **in
	}
	if in.RdnsRef != nil {
		in, out := &in.RdnsRef, &out.RdnsRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RdnsSelector != nil {
		in, out := &in.RdnsSelector, &out.RdnsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPInitParameters.
func (in *IPInitParameters) DeepCopy() *IPInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPList) DeepCopyInto(out *IPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPList.
func (in *IPList) DeepCopy() *IPList {
	if in == nil {
		return nil
	}
	out := new(IPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPObservation) DeepCopyInto(out *IPObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.ApplyImmediately != nil {
		in, out := &in.ApplyImmediately, &out.ApplyImmediately
		*out = new(bool)
		**out = **in
	}
	if in.Gateway != nil {
		in, out := &in.Gateway, &out.Gateway
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.Prefix != nil {
		in, out := &in.Prefix, &out.Prefix
		*out = new(float64)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.Rdns != nil {
		in, out := &in.Rdns, &out.Rdns
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetMask != nil {
		in, out := &in.SubnetMask, &out.SubnetMask
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VPCNAT11 != nil {
		in, out := &in.VPCNAT11, &out.VPCNAT11
		*out = make([]VPCNAT11Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPObservation.
func (in *IPObservation) DeepCopy() *IPObservation {
	if in == nil {
		return nil
	}
	out := new(IPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPParameters) DeepCopyInto(out *IPParameters) {
	*out = *in
	if in.ApplyImmediately != nil {
		in, out := &in.ApplyImmediately, &out.ApplyImmediately
		*out = new(bool)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
	if in.Rdns != nil {
		in, out := &in.Rdns, &out.Rdns
		*out = new(string)
		**out = **in
	}
	if in.RdnsRef != nil {
		in, out := &in.RdnsRef, &out.RdnsRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RdnsSelector != nil {
		in, out := &in.RdnsSelector, &out.RdnsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPParameters.
func (in *IPParameters) DeepCopy() *IPParameters {
	if in == nil {
		return nil
	}
	out := new(IPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPSpec) DeepCopyInto(out *IPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPSpec.
func (in *IPSpec) DeepCopy() *IPSpec {
	if in == nil {
		return nil
	}
	out := new(IPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPStatus) DeepCopyInto(out *IPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPStatus.
func (in *IPStatus) DeepCopy() *IPStatus {
	if in == nil {
		return nil
	}
	out := new(IPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4InitParameters) DeepCopyInto(out *IPv4InitParameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4InitParameters.
func (in *IPv4InitParameters) DeepCopy() *IPv4InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Observation) DeepCopyInto(out *IPv4Observation) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Observation.
func (in *IPv4Observation) DeepCopy() *IPv4Observation {
	if in == nil {
		return nil
	}
	out := new(IPv4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv4Parameters) DeepCopyInto(out *IPv4Parameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv4Parameters.
func (in *IPv4Parameters) DeepCopy() *IPv4Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]AlertsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(float64)
		**out = **in
	}
	if in.BackupsEnabled != nil {
		in, out := &in.BackupsEnabled, &out.BackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BootConfigLabel != nil {
		in, out := &in.BootConfigLabel, &out.BootConfigLabel
		*out = new(string)
		**out = **in
	}
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(string)
		**out = **in
	}
	if in.FirewallID != nil {
		in, out := &in.FirewallID, &out.FirewallID
		*out = new(float64)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InstanceInterfaceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MigrationType != nil {
		in, out := &in.MigrationType, &out.MigrationType
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = make([]PlacementGroupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroupExternallyManaged != nil {
		in, out := &in.PlacementGroupExternallyManaged, &out.PlacementGroupExternallyManaged
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResizeDisk != nil {
		in, out := &in.ResizeDisk, &out.ResizeDisk
		*out = new(bool)
		**out = **in
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SharedIPv4 != nil {
		in, out := &in.SharedIPv4, &out.SharedIPv4
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackscriptData != nil {
		in, out := &in.StackscriptData, &out.StackscriptData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptIDRef != nil {
		in, out := &in.StackscriptIDRef, &out.StackscriptIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackscriptIDSelector != nil {
		in, out := &in.StackscriptIDSelector, &out.StackscriptIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SwapSize != nil {
		in, out := &in.SwapSize, &out.SwapSize
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WatchdogEnabled != nil {
		in, out := &in.WatchdogEnabled, &out.WatchdogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInterfaceInitParameters) DeepCopyInto(out *InstanceInterfaceInitParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]InterfaceIPv4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInterfaceInitParameters.
func (in *InstanceInterfaceInitParameters) DeepCopy() *InstanceInterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInterfaceObservation) DeepCopyInto(out *InstanceInterfaceObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]InterfaceIPv4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInterfaceObservation.
func (in *InstanceInterfaceObservation) DeepCopy() *InstanceInterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceInterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInterfaceParameters) DeepCopyInto(out *InstanceInterfaceParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]InterfaceIPv4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInterfaceParameters.
func (in *InstanceInterfaceParameters) DeepCopy() *InstanceInterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]AlertsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(float64)
		**out = **in
	}
	if in.Backups != nil {
		in, out := &in.Backups, &out.Backups
		*out = make([]BackupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BackupsEnabled != nil {
		in, out := &in.BackupsEnabled, &out.BackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BootConfigLabel != nil {
		in, out := &in.BootConfigLabel, &out.BootConfigLabel
		*out = new(string)
		**out = **in
	}
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(string)
		**out = **in
	}
	if in.FirewallID != nil {
		in, out := &in.FirewallID, &out.FirewallID
		*out = new(float64)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.HasUserData != nil {
		in, out := &in.HasUserData, &out.HasUserData
		*out = new(bool)
		**out = **in
	}
	if in.HostUUID != nil {
		in, out := &in.HostUUID, &out.HostUUID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InstanceInterfaceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.LkeClusterID != nil {
		in, out := &in.LkeClusterID, &out.LkeClusterID
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MigrationType != nil {
		in, out := &in.MigrationType, &out.MigrationType
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = make([]PlacementGroupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroupExternallyManaged != nil {
		in, out := &in.PlacementGroupExternallyManaged, &out.PlacementGroupExternallyManaged
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIPAddress != nil {
		in, out := &in.PrivateIPAddress, &out.PrivateIPAddress
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResizeDisk != nil {
		in, out := &in.ResizeDisk, &out.ResizeDisk
		*out = new(bool)
		**out = **in
	}
	if in.SharedIPv4 != nil {
		in, out := &in.SharedIPv4, &out.SharedIPv4
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Specs != nil {
		in, out := &in.Specs, &out.Specs
		*out = make([]SpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SwapSize != nil {
		in, out := &in.SwapSize, &out.SwapSize
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WatchdogEnabled != nil {
		in, out := &in.WatchdogEnabled, &out.WatchdogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.Alerts != nil {
		in, out := &in.Alerts, &out.Alerts
		*out = make([]AlertsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizedKeys != nil {
		in, out := &in.AuthorizedKeys, &out.AuthorizedKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizedUsers != nil {
		in, out := &in.AuthorizedUsers, &out.AuthorizedUsers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BackupID != nil {
		in, out := &in.BackupID, &out.BackupID
		*out = new(float64)
		**out = **in
	}
	if in.BackupsEnabled != nil {
		in, out := &in.BackupsEnabled, &out.BackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BootConfigLabel != nil {
		in, out := &in.BootConfigLabel, &out.BootConfigLabel
		*out = new(string)
		**out = **in
	}
	if in.Booted != nil {
		in, out := &in.Booted, &out.Booted
		*out = new(bool)
		**out = **in
	}
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]ConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = make([]DiskParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(string)
		**out = **in
	}
	if in.FirewallID != nil {
		in, out := &in.FirewallID, &out.FirewallID
		*out = new(float64)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Interface != nil {
		in, out := &in.Interface, &out.Interface
		*out = make([]InstanceInterfaceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make([]MetadataParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MigrationType != nil {
		in, out := &in.MigrationType, &out.MigrationType
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroup != nil {
		in, out := &in.PlacementGroup, &out.PlacementGroup
		*out = make([]PlacementGroupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementGroupExternallyManaged != nil {
		in, out := &in.PlacementGroupExternallyManaged, &out.PlacementGroupExternallyManaged
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResizeDisk != nil {
		in, out := &in.ResizeDisk, &out.ResizeDisk
		*out = new(bool)
		**out = **in
	}
	if in.RootPassSecretRef != nil {
		in, out := &in.RootPassSecretRef, &out.RootPassSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.SharedIPv4 != nil {
		in, out := &in.SharedIPv4, &out.SharedIPv4
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.StackscriptDataSecretRef != nil {
		in, out := &in.StackscriptDataSecretRef, &out.StackscriptDataSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.StackscriptID != nil {
		in, out := &in.StackscriptID, &out.StackscriptID
		*out = new(float64)
		**out = **in
	}
	if in.StackscriptIDRef != nil {
		in, out := &in.StackscriptIDRef, &out.StackscriptIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.StackscriptIDSelector != nil {
		in, out := &in.StackscriptIDSelector, &out.StackscriptIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SwapSize != nil {
		in, out := &in.SwapSize, &out.SwapSize
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.WatchdogEnabled != nil {
		in, out := &in.WatchdogEnabled, &out.WatchdogEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceIPv4InitParameters) DeepCopyInto(out *InterfaceIPv4InitParameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceIPv4InitParameters.
func (in *InterfaceIPv4InitParameters) DeepCopy() *InterfaceIPv4InitParameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceIPv4InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceIPv4Observation) DeepCopyInto(out *InterfaceIPv4Observation) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceIPv4Observation.
func (in *InterfaceIPv4Observation) DeepCopy() *InterfaceIPv4Observation {
	if in == nil {
		return nil
	}
	out := new(InterfaceIPv4Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceIPv4Parameters) DeepCopyInto(out *InterfaceIPv4Parameters) {
	*out = *in
	if in.NAT11 != nil {
		in, out := &in.NAT11, &out.NAT11
		*out = new(string)
		**out = **in
	}
	if in.VPC != nil {
		in, out := &in.VPC, &out.VPC
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceIPv4Parameters.
func (in *InterfaceIPv4Parameters) DeepCopy() *InterfaceIPv4Parameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceIPv4Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceInitParameters) DeepCopyInto(out *InterfaceInitParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceInitParameters.
func (in *InterfaceInitParameters) DeepCopy() *InterfaceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceObservation) DeepCopyInto(out *InterfaceObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceObservation.
func (in *InterfaceObservation) DeepCopy() *InterfaceObservation {
	if in == nil {
		return nil
	}
	out := new(InterfaceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InterfaceParameters) DeepCopyInto(out *InterfaceParameters) {
	*out = *in
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = make([]IPv4Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpamAddress != nil {
		in, out := &in.IpamAddress, &out.IpamAddress
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Primary != nil {
		in, out := &in.Primary, &out.Primary
		*out = new(bool)
		**out = **in
	}
	if in.Purpose != nil {
		in, out := &in.Purpose, &out.Purpose
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InterfaceParameters.
func (in *InterfaceParameters) DeepCopy() *InterfaceParameters {
	if in == nil {
		return nil
	}
	out := new(InterfaceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataInitParameters) DeepCopyInto(out *MetadataInitParameters) {
	*out = *in
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataInitParameters.
func (in *MetadataInitParameters) DeepCopy() *MetadataInitParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataObservation) DeepCopyInto(out *MetadataObservation) {
	*out = *in
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataObservation.
func (in *MetadataObservation) DeepCopy() *MetadataObservation {
	if in == nil {
		return nil
	}
	out := new(MetadataObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetadataParameters) DeepCopyInto(out *MetadataParameters) {
	*out = *in
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetadataParameters.
func (in *MetadataParameters) DeepCopy() *MetadataParameters {
	if in == nil {
		return nil
	}
	out := new(MetadataParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupInitParameters) DeepCopyInto(out *PlacementGroupInitParameters) {
	*out = *in
	if in.CompliantOnly != nil {
		in, out := &in.CompliantOnly, &out.CompliantOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.PlacementGroupPolicy != nil {
		in, out := &in.PlacementGroupPolicy, &out.PlacementGroupPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupInitParameters.
func (in *PlacementGroupInitParameters) DeepCopy() *PlacementGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupObservation) DeepCopyInto(out *PlacementGroupObservation) {
	*out = *in
	if in.CompliantOnly != nil {
		in, out := &in.CompliantOnly, &out.CompliantOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupPolicy != nil {
		in, out := &in.PlacementGroupPolicy, &out.PlacementGroupPolicy
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupType != nil {
		in, out := &in.PlacementGroupType, &out.PlacementGroupType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupObservation.
func (in *PlacementGroupObservation) DeepCopy() *PlacementGroupObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupParameters) DeepCopyInto(out *PlacementGroupParameters) {
	*out = *in
	if in.CompliantOnly != nil {
		in, out := &in.CompliantOnly, &out.CompliantOnly
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(float64)
		**out = **in
	}
	if in.PlacementGroupPolicy != nil {
		in, out := &in.PlacementGroupPolicy, &out.PlacementGroupPolicy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupParameters.
func (in *PlacementGroupParameters) DeepCopy() *PlacementGroupParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleInitParameters) DeepCopyInto(out *ScheduleInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleInitParameters.
func (in *ScheduleInitParameters) DeepCopy() *ScheduleInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleObservation) DeepCopyInto(out *ScheduleObservation) {
	*out = *in
	if in.Day != nil {
		in, out := &in.Day, &out.Day
		*out = new(string)
		**out = **in
	}
	if in.Window != nil {
		in, out := &in.Window, &out.Window
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleObservation.
func (in *ScheduleObservation) DeepCopy() *ScheduleObservation {
	if in == nil {
		return nil
	}
	out := new(ScheduleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleParameters) DeepCopyInto(out *ScheduleParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleParameters.
func (in *ScheduleParameters) DeepCopy() *ScheduleParameters {
	if in == nil {
		return nil
	}
	out := new(ScheduleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdaInitParameters) DeepCopyInto(out *SdaInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdaInitParameters.
func (in *SdaInitParameters) DeepCopy() *SdaInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdaObservation) DeepCopyInto(out *SdaObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdaObservation.
func (in *SdaObservation) DeepCopy() *SdaObservation {
	if in == nil {
		return nil
	}
	out := new(SdaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdaParameters) DeepCopyInto(out *SdaParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdaParameters.
func (in *SdaParameters) DeepCopy() *SdaParameters {
	if in == nil {
		return nil
	}
	out := new(SdaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdbInitParameters) DeepCopyInto(out *SdbInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdbInitParameters.
func (in *SdbInitParameters) DeepCopy() *SdbInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdbInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdbObservation) DeepCopyInto(out *SdbObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdbObservation.
func (in *SdbObservation) DeepCopy() *SdbObservation {
	if in == nil {
		return nil
	}
	out := new(SdbObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdbParameters) DeepCopyInto(out *SdbParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdbParameters.
func (in *SdbParameters) DeepCopy() *SdbParameters {
	if in == nil {
		return nil
	}
	out := new(SdbParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdcInitParameters) DeepCopyInto(out *SdcInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdcInitParameters.
func (in *SdcInitParameters) DeepCopy() *SdcInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdcObservation) DeepCopyInto(out *SdcObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdcObservation.
func (in *SdcObservation) DeepCopy() *SdcObservation {
	if in == nil {
		return nil
	}
	out := new(SdcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdcParameters) DeepCopyInto(out *SdcParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdcParameters.
func (in *SdcParameters) DeepCopy() *SdcParameters {
	if in == nil {
		return nil
	}
	out := new(SdcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SddInitParameters) DeepCopyInto(out *SddInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SddInitParameters.
func (in *SddInitParameters) DeepCopy() *SddInitParameters {
	if in == nil {
		return nil
	}
	out := new(SddInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SddObservation) DeepCopyInto(out *SddObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SddObservation.
func (in *SddObservation) DeepCopy() *SddObservation {
	if in == nil {
		return nil
	}
	out := new(SddObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SddParameters) DeepCopyInto(out *SddParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SddParameters.
func (in *SddParameters) DeepCopy() *SddParameters {
	if in == nil {
		return nil
	}
	out := new(SddParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdeInitParameters) DeepCopyInto(out *SdeInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdeInitParameters.
func (in *SdeInitParameters) DeepCopy() *SdeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdeObservation) DeepCopyInto(out *SdeObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdeObservation.
func (in *SdeObservation) DeepCopy() *SdeObservation {
	if in == nil {
		return nil
	}
	out := new(SdeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdeParameters) DeepCopyInto(out *SdeParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdeParameters.
func (in *SdeParameters) DeepCopy() *SdeParameters {
	if in == nil {
		return nil
	}
	out := new(SdeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdfInitParameters) DeepCopyInto(out *SdfInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdfInitParameters.
func (in *SdfInitParameters) DeepCopy() *SdfInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdfInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdfObservation) DeepCopyInto(out *SdfObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdfObservation.
func (in *SdfObservation) DeepCopy() *SdfObservation {
	if in == nil {
		return nil
	}
	out := new(SdfObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdfParameters) DeepCopyInto(out *SdfParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdfParameters.
func (in *SdfParameters) DeepCopy() *SdfParameters {
	if in == nil {
		return nil
	}
	out := new(SdfParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdgInitParameters) DeepCopyInto(out *SdgInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdgInitParameters.
func (in *SdgInitParameters) DeepCopy() *SdgInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdgInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdgObservation) DeepCopyInto(out *SdgObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdgObservation.
func (in *SdgObservation) DeepCopy() *SdgObservation {
	if in == nil {
		return nil
	}
	out := new(SdgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdgParameters) DeepCopyInto(out *SdgParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdgParameters.
func (in *SdgParameters) DeepCopy() *SdgParameters {
	if in == nil {
		return nil
	}
	out := new(SdgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdhInitParameters) DeepCopyInto(out *SdhInitParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdhInitParameters.
func (in *SdhInitParameters) DeepCopy() *SdhInitParameters {
	if in == nil {
		return nil
	}
	out := new(SdhInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdhObservation) DeepCopyInto(out *SdhObservation) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdhObservation.
func (in *SdhObservation) DeepCopy() *SdhObservation {
	if in == nil {
		return nil
	}
	out := new(SdhObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SdhParameters) DeepCopyInto(out *SdhParameters) {
	*out = *in
	if in.DiskID != nil {
		in, out := &in.DiskID, &out.DiskID
		*out = new(float64)
		**out = **in
	}
	if in.DiskLabel != nil {
		in, out := &in.DiskLabel, &out.DiskLabel
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SdhParameters.
func (in *SdhParameters) DeepCopy() *SdhParameters {
	if in == nil {
		return nil
	}
	out := new(SdhParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPs) DeepCopyInto(out *SharedIPs) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPs.
func (in *SharedIPs) DeepCopy() *SharedIPs {
	if in == nil {
		return nil
	}
	out := new(SharedIPs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedIPs) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsInitParameters) DeepCopyInto(out *SharedIPsInitParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsInitParameters.
func (in *SharedIPsInitParameters) DeepCopy() *SharedIPsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SharedIPsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsList) DeepCopyInto(out *SharedIPsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharedIPs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsList.
func (in *SharedIPsList) DeepCopy() *SharedIPsList {
	if in == nil {
		return nil
	}
	out := new(SharedIPsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedIPsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsObservation) DeepCopyInto(out *SharedIPsObservation) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsObservation.
func (in *SharedIPsObservation) DeepCopy() *SharedIPsObservation {
	if in == nil {
		return nil
	}
	out := new(SharedIPsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsParameters) DeepCopyInto(out *SharedIPsParameters) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LinodeID != nil {
		in, out := &in.LinodeID, &out.LinodeID
		*out = new(float64)
		**out = **in
	}
	if in.LinodeIDRef != nil {
		in, out := &in.LinodeIDRef, &out.LinodeIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LinodeIDSelector != nil {
		in, out := &in.LinodeIDSelector, &out.LinodeIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsParameters.
func (in *SharedIPsParameters) DeepCopy() *SharedIPsParameters {
	if in == nil {
		return nil
	}
	out := new(SharedIPsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsSpec) DeepCopyInto(out *SharedIPsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsSpec.
func (in *SharedIPsSpec) DeepCopy() *SharedIPsSpec {
	if in == nil {
		return nil
	}
	out := new(SharedIPsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedIPsStatus) DeepCopyInto(out *SharedIPsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedIPsStatus.
func (in *SharedIPsStatus) DeepCopy() *SharedIPsStatus {
	if in == nil {
		return nil
	}
	out := new(SharedIPsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecsInitParameters) DeepCopyInto(out *SpecsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecsInitParameters.
func (in *SpecsInitParameters) DeepCopy() *SpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecsObservation) DeepCopyInto(out *SpecsObservation) {
	*out = *in
	if in.Disk != nil {
		in, out := &in.Disk, &out.Disk
		*out = new(float64)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(float64)
		**out = **in
	}
	if in.Transfer != nil {
		in, out := &in.Transfer, &out.Transfer
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecsObservation.
func (in *SpecsObservation) DeepCopy() *SpecsObservation {
	if in == nil {
		return nil
	}
	out := new(SpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpecsParameters) DeepCopyInto(out *SpecsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpecsParameters.
func (in *SpecsParameters) DeepCopy() *SpecsParameters {
	if in == nil {
		return nil
	}
	out := new(SpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNAT11InitParameters) DeepCopyInto(out *VPCNAT11InitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNAT11InitParameters.
func (in *VPCNAT11InitParameters) DeepCopy() *VPCNAT11InitParameters {
	if in == nil {
		return nil
	}
	out := new(VPCNAT11InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNAT11Observation) DeepCopyInto(out *VPCNAT11Observation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNAT11Observation.
func (in *VPCNAT11Observation) DeepCopy() *VPCNAT11Observation {
	if in == nil {
		return nil
	}
	out := new(VPCNAT11Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCNAT11Parameters) DeepCopyInto(out *VPCNAT11Parameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCNAT11Parameters.
func (in *VPCNAT11Parameters) DeepCopy() *VPCNAT11Parameters {
	if in == nil {
		return nil
	}
	out := new(VPCNAT11Parameters)
	in.DeepCopyInto(out)
	return out
}
